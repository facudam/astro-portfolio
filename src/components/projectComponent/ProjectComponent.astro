---
interface Props {
    title: string,
    image: string,
    alt: string,
    description: string,
    tecnologies: string[],
    codeLink: string,
    website?: string,
    codeBtnText: string,
    liveBtnText: string
}

const { title, image, alt, description, tecnologies, codeLink, website, codeBtnText, liveBtnText } = Astro.props;
---

<div class="flex flex-col gap-5  md:flex-row ">
    <div class="h-56 overflow-hidden transition duration-700 w-full border border-stone-600 flex justify-center items-center rounded-md group bg-gradient-to-r from-slate-700 to-blue-500 hover:from-blue-500 hover:to-slate-700 md:max-w-xs md:min-w-80">
        <img class="group-hover:scale-110 transition duration-700" src={ image } alt={ alt }/>
    </div>
    <div>
        <div>
            <h3 class="text-xl font-black mb-2">{ title }</h3>
            <p class="text-slate-100">{ description }</p>
        </div>
        <div class="flex gap-2 flex-wrap my-3">
            {
                tecnologies.map(tecnology => (
                    <span class="px-2 py-1 rounded-lg border border-stone-600 bg-slate-900">{ tecnology }</span>
                ))
            }
        </div>

        <div class="flex gap-3 mt-5">
            <a class="flex justify-center items-center gap-1 w-20 px-4 py-1 rounded-lg bg-slate-200 hover:bg-slate-50 transition-all" target="_blank" href={ codeLink }>
                <img class="w-6" src="github.webp" alt="github"/>
                <span class="text-slate-900 font-semibold">{ codeBtnText }</span>
            </a>
            {
                website &&
                    <a class="flex justify-center items-center gap-1 w-20 px-4 py-1 rounded-lg bg-slate-200 hover:bg-slate-50 transition-all" target="_blank" href={ website }>
                        <img class="w-6" src="eye.webp" alt="eye"/>
                        <span class="text-slate-900 font-semibold">{ liveBtnText }</span>
                    </a>            
            }
        </div>
    </div>
</div>